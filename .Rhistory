myDF<-data.frame()
for (i in grps){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-rbind(myDF,out)
}
return(grps<-grps[-1])
}
View(myDF)
View(rem)
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in grps){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-rbind(myDF,out)
}
return(grps<-rem)
}
View(myDF)
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in grps){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-rbind(myDF,out)
}
grps<-rem
}
View(myDF)
View(rem)
library(tidyverse)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
grps<-as.character(unique(dat$group))
myDF<-data.frame()
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in grps){
first<-filter(dat,group == i)
#rem<-filter(dat,group != i)
for (j in unique(filter(dat,group != i))){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-rbind(myDF,out)
}
grps<-
}
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in unique(dat$group)){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-rbind(myDF,out)
}
return(dat<-filter(dat,group != i))
}
View(myDF)
View(dat)
dat[i,]
dat[i,1]
dat[i,2]
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
dat<-filter(dat,group != 'A')
View(dat)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in unique(dat$group)){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-rbind(myDF,out)
}
dat<-filter(dat,group != i)
}
View(myDF)
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
wilcox.test(a$values,b$values)$p.value
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
wilcox.test(a$values,b$values)$p.value
wilcox.test(a$values,c$values)$p.value
wilcox.test(b$values,c$values)$p.value
wilcox.test(a$values,e$values)$p.value
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
d<-filter(dat,group=='D')
e<-filter(dat,group=='E')
wilcox.test(a$values,e$values)$p.value
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in unique(dat$group)){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-rbind(myDF,out)
}
dat<-filter(dat,group != i)
}
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in unique(dat$group)){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-unique(rbind(myDF,out))
}
dat<-filter(dat,group != i)
}
View(myDF)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
d<-filter(dat,group=='D')
e<-filter(dat,group=='E')
wilcox.test(a$values,e$values)$p.value
set.seed(42)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
grps<-as.character(unique(dat$group))
myDF<-data.frame()
for (i in unique(dat$group)){
first<-filter(dat,group == i)
rem<-filter(dat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-unique(rbind(myDF,out))
}
dat<-filter(dat,group != i)
}
View(myDF)
library(tidyverse)
set.seed(42)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=6)),
values=c(rnorm(6,1,3),rnorm(6,10,3),rnorm(6,100,3),rnorm(6,1000,3),rnorm(6,1,3))
)
dat$group<-as.character(dat$group)
#Mann Whitney
tdat<-dat
grps<-as.character(unique(tdat$group))
myDF<-data.frame()
for (i in unique(tdat$group)){
first<-filter(tdat,group == i)
rem<-filter(tdat,group != i)
for (j in unique(rem$group)){
tst<-filter(rem,group == j)
name<-paste(first$group,"vs",tst$group)
mwRes<-round(wilcox.test(first$values,tst$values)$p.value,6)
out<-data.frame(name,mwRes)
myDF<-unique(rbind(myDF,out))
}
tdat<-filter(tdat,group != i)
}
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
d<-filter(dat,group=='D')
e<-filter(dat,group=='E')
wilcox.test(a$values,b$values)$p.value
wilcox.test(a$values,c$values)$p.value
wilcox.test(a$values,d$values)$p.value
wilcox.test(a$values,e$values)$p.value
boxplot(a,b,c,d,e)
View(a)
boxplot(a$values,b$values,c$values,d$values,e$values)
set.seed(42)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=30)),
values=c(rnorm(30,1,5),rnorm(30,10,5),rnorm(30,100,50),rnorm(30,1000,50),rnorm(30,10000,300))
)
dat$group<-as.character(dat$group)
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
d<-filter(dat,group=='D')
e<-filter(dat,group=='E')
boxplot(a$values,b$values,c$values,d$values,e$values)
set.seed(42)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=30)),
values=c(rnorm(30,1,25),rnorm(30,10,9),rnorm(30,100,50),rnorm(30,1000,250),rnorm(30,10000,300))
)
dat$group<-as.character(dat$group)
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
d<-filter(dat,group=='D')
e<-filter(dat,group=='E')
boxplot(a$values,b$values,c$values,d$values,e$values)
boxplot(a$values,b$values,c$values,d$values,e$values)
wilcox.test(a$values,b$values)$p.value
wilcox.test(a$values,c$values)$p.value
wilcox.test(a$values,d$values)$p.value
wilcox.test(a$values,e$values)$p.value
summary(a$values)
set.seed(42)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=4)),
values=c(rnorm(4,1,25),rnorm(4,10,9),rnorm(4,100,50),rnorm(4,1000,250),rnorm(4,10000,300))
)
dat$group<-as.character(dat$group)
a<-filter(dat,group=='A')
b<-filter(dat,group=='B')
c<-filter(dat,group=='C')
d<-filter(dat,group=='D')
e<-filter(dat,group=='E')
boxplot(a$values,b$values,c$values,d$values,e$values)
wilcox.test(a$values,b$values)$p.value
wilcox.test(a$values,c$values)$p.value
wilcox.test(a$values,d$values)$p.value
wilcox.test(a$values,e$values)$p.value
set.seed(42)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=c(4,10,4,20,36)),
values=c(rnorm(4,1,25),rnorm(10,10,9),rnorm(4,100,50),rnorm(20,1000,250),rnorm(36,10000,300))
)
set.seed(42)
set.seed(42)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),each=c(4,10,4,20,36)),
values=c(rnorm(4,1,25),rnorm(10,10,9),rnorm(4,100,50),rnorm(20,1000,250),rnorm(36,10000,300))
)
dat$group<-as.character(dat$group)
group=as.character(rep(c('A','B','C','D','E'),(4,10,4,20,36)),
values=c(rnorm(4,1,25),rnorm(10,10,9),rnorm(4,100,50),rnorm(20,1000,250),rnorm(36,10000,300))
)
dat<-data.frame(
group=as.character(rep(c('A','B','C','D','E'),(4,10,4,20,36)),
values=c(rnorm(4,1,25),rnorm(10,10,9),rnorm(4,100,50),rnorm(20,1000,250),rnorm(36,10000,300))
)
?rep
set.seed(42)
dat<-data.frame(
dat<-data.frame(
group<-as.character(rep(A:E,(4,10,4,20,36)),
group<-letters(A:E)
#Residuals cont.
#rstandard
#rstudent
?influence.measures
#Model selection--------------------------
#variance inflation factors
library(car)
library(RODBC)
knitr::opts_chunk$set(echo = TRUE,error = FALSE,message = FALSE, warning = FALSE)
files<-list.files("//ussbs1s01/Projects/City of Denver VB-I70/Database")
files
install.packages('tabulizer')
library(tabulizer)
library(tidyverse)
?forcats
#Read in data-------------
path<-'https://www.nps.gov/grca/planyourvisit/upload/2018_Lottery_Statistics.pdf'
class(path)
?extract_tables
data<-extract_text(path,pages=c(2:11))
data<-extract_tables(path,pages=c(2:11))
data<-extract_tables(path,pages=2)
data<-extract_tables(path)
file<-download.file(path,destfile='c:/R_Projects/deleteme.pdf')
?download.file
file<-download.file(path,destfile='c:/R_Projects/deleteme.pdf',mode='wb')
file<-'c:/R_Projects/deleteme.pdf'
data<-extract_tables(file)
data<-extract_tables(file,pages = c(2:11))
library(tabulizer)
library(tabulizerjars)
library(tidyverse)
data<-extract_tables(file,pages = c(2:11))
remove.packages("RJDBC")
remove.packages("tabulizer")
install.packages("tabulizer")
library(tabulizer)
library(tabulizerjars)
library(tidyverse)
sessionInfo()
#Read in data-------------
path<-'https://www.nps.gov/grca/planyourvisit/upload/2018_Lottery_Statistics.pdf'
download.file(path,destfile='c:/R_Projects/deleteme.pdf',mode='wb')
file<-'c:/R_Projects/deleteme.pdf'
data<-extract_tables(file,pages = c(2:11))
R.home()
rJava::.jclassPath()
sessionInfo()
remove.packages("tabulizer")
remove.packages("tabulizerjars")
install.packages("tabulizer")
library(tabulizer)
library(tabulizerjars)
library(tidyverse)
#Read in data-------------
path<-'https://www.nps.gov/grca/planyourvisit/upload/2018_Lottery_Statistics.pdf'
download.file(path,destfile='c:/R_Projects/deleteme.pdf',mode='wb')
file<-'c:/R_Projects/deleteme.pdf'
data<-extract_tables(file,pages = c(2:11))
library(rJava)
data<-extract_tables(file,pages = c(2:11))
?Startup
getwd()
file.edit(file.path("~", ".Rprofile")) # edit .Rprofile in HOME
R.home()
path.expand("~")
library(tabulizer)
library(tabulizerjars)
library(tidyverse)
#Read in data-------------
path<-'https://www.nps.gov/grca/planyourvisit/upload/2018_Lottery_Statistics.pdf'
download.file(path,destfile='c:/R_Projects/deleteme.pdf',mode='wb')
file<-'c:/R_Projects/deleteme.pdf'
data<-extract_tables(file,pages = c(2:11))
install.packages("tabulizer")
install.packages("tabulizer")
sessionInfo()
install.packages("tabulizerjars")
remove.packages("tabulizer")
remove.packages("tabulizerjars")
?install.packages
install.packages("tabulizer")
library("tabulizer", lib.loc="~/R/win-library/3.4")
library("tabulizerjars", lib.loc="~/R/win-library/3.4")
library("tidyverse", lib.loc="~/R/win-library/3.4")
file<-'c:/R_Projects/deleteme.pdf'
data<-extract_tables(file,pages = c(2:11))
?classPath
??classPath
print(.jclassPath())
library(rJava)
print(.jclassPath())
.jaddClassPath('C:/Users/peernisse/Documents/R/win-library/3.4/tabulizerjars/java/tabula.jar')
print(.jclassPath())
data<-extract_tables(file,pages = c(2:11))
?jfindClass
??jfindClass
install.packages("rmarkdown",type="source")
install.packages("rmarkdown", type = "source")
touch _site.yml
setwd("C:/R_Projects/LearnR")
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/R_Projects/LearnR")
#render your sweet site.
rmarkdown::render_site()
